Implement the Derived Class

Problem Statement
Implement a function getDetails(String carName) of the Derived Class Car which takes a string carName and appends it with model, name, and speed. We have already implemented the Base Class Vehicle with the member functions getModel() and getSpeed() which return the model and speed of the car respectively.

Input
Car Name

Output
Car Name, Model, Speed

Sample Input
                  "Roadster";
Sample Output
                  "Roadster, Tesla, 100";
                  
                  
                  SOLUTION
                  
// Base Class
class Vehicle {

  // Private Data Members
  private String speed;
  private String model;

  public Vehicle() { // Default Constructor
    speed = "100";
    model = "Tesla";
  }

  // Getter Function
  public String getSpeed() {
    return speed;
  }

  // Getter Function
  public String getModel() {
    return model; 
  }
  
}

// Derived Class
class Car extends Vehicle { 

  public String name; //  Name of a Car

  public Car() { // Default Constructor
    name = "";
  }

  // This function sets the name of the car
  public void setDetails(String name) { // Setter Function
    this.name = name;
  }

  // This function calls the Base class functions and append the result with input 
  public String getDetails(String carName) {
    String details = carName + ", " + getModel() + ", " + getSpeed(); // calling Base Class Function
    return details;
  } 


  public static void main(String args[]) {
    Car car = new Car();
    System.out.println(car.getDetails("X"));
  }
  
}




2.Challenge 2: Implement the Parametrized Constructor

Problem Statement
Implement the constructor Dell(String name) of the Derived Class Dell which takes a string, name. We have already implemented the Base Class Laptop with the member function getName() and a parameterized constructor.

Input
Laptop name is being passed through the parameterized constructor.

Output
getName() method is returing Laptop name.

Sample Input
        Dell dell = new Dell("Dell Inspiron");
Sample Output
        "Dell Inspiron"
        
 
 SOLUTION
 
 // Base Class
class Laptop {

  // Private Data Members
  private String name;

  public Laptop() { // Default Constructor
    name = "";  
  }

  public Laptop(String name) { // Default Constructor
    this.name = name;  
  }

  // Getter Function
  public String getName() {
    return name;
  }
  
}

// Derived Class
class Dell extends Laptop { 

  public Dell() { // Default Constructor

  }

  public Dell(String name) { // Parametrized Constructor
   super(name);
    }

  public String getDetails() { 
    return getName();
  }

  public static void main(String args[]) {
   Dell dell = new Dell("Dell Inspiron");
   System.out.println(dell.getDetails());
    
  }
  
}


                  
